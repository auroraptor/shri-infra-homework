name: Prod Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

permissions:
  contents: write
  issues: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Login to Yandex Container Registry
        run: |
          echo ${{ secrets.YC_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex

      - name: Pull Docker image
        run: |
          docker pull cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/my-first-registry:${{ github.event.inputs.release_version }}_latest

      - name: Set up SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy Docker image
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no admin@${{ secrets.SERVER_IP }} "
          echo ${{ secrets.YC_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex &&
          docker pull cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/my-first-registry:${{ github.event.inputs.release_version }}_latest &&
          docker run -d -p 80:3000 cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/my-first-registry:${{ github.event.inputs.release_version }}_latest
          "

      - name: Create GitHub issue
        run: |
          touch issue_temp.txt
          echo "**Version:** ${{ github.event.inputs.release_version }}" >> issue_temp.txt
          echo "**Date:** $(date +'%Y-%m-%d)" >> issue_temp.txt
          echo "**Triggering actor:** ${{ github.triggering_actor }}" >> issue_temp.txt
          echo "**Docker image:** cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/my-first-registry:${{ github.event.inputs.release_version }}_latest" >> issue_temp.txt
          gh issue create --title "Prod Release ${{ github.event.inputs.release_version }}" --body-file issue_temp.txt
          rm issue_temp.txt
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

name: Deploy

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

permissions:
  contents: write
  issues: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      USER: ${{ github.triggering_actor }}
      RUN: ${{ github.run_number }}
      RELEASE: ${{ github.event.inputs.release_version }}
      REGISTRY: cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/my-first-registry
      YC_OAUTH_TOKEN: ${{ secrets.YC_OAUTH_TOKEN }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3


      - name: Pull Docker image
        run: |
          docker login --username oauth --password $YC_OAUTH_TOKEN cr.yandex
          docker pull $REGISTRY:$RELEASE_latest

      - name: Deploy Docker image
        run: |
          ssh -i <(echo "$SSH_PRIVATE_KEY") -o StrictHostKeyChecking=no admin@$SERVER_IP "
          docker login cr.yandex -u oauth --password-stdin <<< $YC_OAUTH_TOKEN &&
          docker pull $REGISTRY:$RELEASE_latest &&
          docker run -d -p 80:3000 $REGISTRY:$RELEASE_latest
          "

      - name: Create GitHub issue
        run: |
          touch $FILE
          echo "**Version:** $RELEASE  " >> $FILE
          echo "**Date:** $(date +%Y-%m-%d)  " >> $FILE
          echo "**Triggering actor:** $USER  " >> $FILE
          echo "**Docker image:** $REGISTRY:$RELEASE_fix$RUN  " >> $FILE
          gh issue create --title "Version $RELEASE deployment" --body-file $FILE
          rm $FILE
        env:
          FILE: issue_temp.txt

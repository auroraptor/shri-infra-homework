name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

permissions:
  contents: write
  issues: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
      - run: |
          echo "Preparing environment"
          git fetch --all
          if git show-ref --verify --quiet refs/heads/release/${{ inputs.release_version }}; then
            echo "Branch release/${{ inputs.release_version }} exists"
            git checkout release/${{ inputs.release_version }}
          else
            echo "Branch release/${{ inputs.release_version }} does not exist. Creating it from main."
            git checkout -b release/${{ inputs.release_version }} origin/main
            git push origin release/${{ inputs.release_version }}
          fi
      - run: npm ci
      - run: npm run lint
      - run: npm run test

  create_release_hotfix_docker:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release/${{ inputs.release_version }}

      - name: Login to Yandex Container Registry
        run: |
          echo ${{ secrets.YC_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex

      - name: Create Docker image Fix
        run: |
          docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ inputs.release_version }}_fix${{ github.run_number }} .
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ inputs.release_version }}_fix${{ github.run_number }}

      - name: Create Docker image Latest
        run: |
          docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ inputs.release_version }}_latest .
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ inputs.release_version }}_latest

  create_tag:
    needs: create_release_hotfix_docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: release/${{ inputs.release_version }}

      - name: Push tag
        uses: EndBug/latest-tag@latest
        with:
          tag-name: ${{ inputs.release_version }}_fix${{ github.run_number }}

  add_issue_comment:
    needs: create_tag
    runs-on: ubuntu-latest
    steps:
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.inputs.issue_number }}
          body: |
            **Fix**:
            - Date: ${{ env.NOW }}
            - Author: ${{ github.triggering_actor }}
            - Version: ${{ inputs.release_version }}_fix${{ github.run_number }}
            - Commits:
            - YC Docker: cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ inputs.release_version }}_fix${{ github.run_number }}

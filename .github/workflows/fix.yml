name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

jobs:
  fix:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    - run: npm install
    - run: npm run lint
    - run: npm test
    - name: Build Docker image
      run: docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest .
    - name: Push Docker image
      run: |
        echo ${{ secrets.YANDEX_TOKEN }} | docker login cr.yandex -u oauth --password-stdin
        docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
        docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
    - name: Create fix tag
      run: |
        git tag -a v${{ github.event.inputs.release_version }}_fix${{ github.run_number }} -m "Fix release ${{ github.event.inputs.release_version }}"
        git push origin v${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
    - name: Find release issue
      id: find_issue
      uses: actions/github-script@v3
      with:
        script: |
          const { github, context } = require('@actions/github');
          const issues = await github.issues.listForRepo({
            ...context.repo,
            state: 'open',
            labels: ['release'],
          });
          const issue = issues.data.find(issue => issue.title.includes(`Release ${{ github.event.inputs.release_version }}`));
          if (!issue) throw new Error('Release issue not found');
          return issue.number;
    - name: Get commit history
      id: commit_history
      run: |
        git fetch --tags
        git log $(git describe --tags --abbrev=0 @^)..@ --pretty=format:"%h - %s (%an)"
    - name: Add comment to GitHub issue
      uses: actions/github-script@v3
      with:
        script: |
          const { github, context } = require('@actions/github');
          const commitHistory = `{{ steps.commit_history.outputs }}`;
          github.issues.createComment({
            ...context.repo,
            issue_number: ${{ steps.find_issue.outputs.issue_number }},
            body: `
              Author: ${{ github.actor }}
              Date: ${new Date().toISOString()}
              Commits:
              ${commitHistory}
              Docker image: cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
            `
          });
